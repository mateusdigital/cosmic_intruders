##~---------------------------------------------------------------------------##
##                        _      _                 _   _                      ##
##                    ___| |_ __| |_ __ ___   __ _| |_| |_                    ##
##                   / __| __/ _` | '_ ` _ \ / _` | __| __|                   ##
##                   \__ \ || (_| | | | | | | (_| | |_| |_                    ##
##                   |___/\__\__,_|_| |_| |_|\__,_|\__|\__|                   ##
##                                                                            ##
##  File      : CMakeLists.txt                                                ##
##  Project   : Cosmic Intruders                                              ##
##  Date      : Nov 17, 2017                                                  ##
##  License   : GPLv3                                                         ##
##  Author    : stdmatt <stdmatt@pixelwizards.io>                             ##
##  Copyright : stdmatt - 2017 - 2020                                         ##
##                                                                            ##
##  Description :                                                             ##
##                                                                            ##
##---------------------------------------------------------------------------~##

##
## Vars expected to be given from the command line:
##    GAME_NAME                 - String with the name of the project / executable.
##    GAME_VERSION              - The version of the project -> will used as #define
##    GAME_TARGET_PLATFORM      - pc / web                   -> Platform that game will be built for.
##    GAME_BUILD_TYPE           - Release / Debug            -> Defaults to debug.
##    GAME_EMSCRIPTEN_TOOLCHAIN - Where the Emscripten.cmake is located.


##----------------------------------------------------------------------------##
## Cmake Definitions                                                          ##
##----------------------------------------------------------------------------##
cmake_minimum_required(VERSION 3.5)
# set(CMAKE_VERBOSE_MAKEFILE on)

##----------------------------------------------------------------------------##
## Project Definitions                                                        ##
##----------------------------------------------------------------------------##
project(${GAME_NAME})

message("[Project name:     ${GAME_NAME}]")
message("[Project version:  ${GAME_VERSION}]")
message("[Project platform: ${GAME_TARGET_PLATFORM}]")
message("[Build type is:    ${CMAKE_BUILD_TYPE}]")


##----------------------------------------------------------------------------##
## Compiler Definitions                                                       ##
##----------------------------------------------------------------------------##
set(CMAKE_CXX_STANDARD          14)
set(CMAKE_CXX_STANDARD_REQUIRED on)

## Debug.
if(NOT GAME_BUILD_TYPE) ## Default to debug if nothing is given....
    message("[Setting build type to Debug]")
    set(${GAME_BUILD_TYPE} Debug)
endif()

set(CMAKE_BUILD_TYPE ${GAME_BUILD_TYPE})

if(${CMAKE_BUILD_TYPE} MATCHES "Debug") ## Set additional defines for DEBUG
    message("[Setting debug additional defines]")
    add_definitions(-DCOOPER_DEBUG)
endif()

## Project Version.
add_definitions(-DCOW_COSMIC_INTRUDERS_VERSION=${GAME_VERSION})



##----------------------------------------------------------------------------##
## Include Directories                                                        ##
##----------------------------------------------------------------------------##
include_directories(
    ${CMAKE_SOURCE_DIR}/lib/Cooper
    ${CMAKE_SOURCE_DIR}/game
)

##----------------------------------------------------------------------------##
## Source Files                                                               ##
##----------------------------------------------------------------------------##
add_subdirectory(lib/Cooper)

set(SOURCE_FILES
    ./game/main.cpp

    ./game/Game/src/Gameplay/Cannon/Cannon.cpp
    ./game/Game/src/Gameplay/Enemy/Alien.cpp
    ./game/Game/src/Gameplay/Formation/Formation.cpp
    ./game/Game/src/Gameplay/GameManager/GameManager.cpp
    ./game/Game/src/Gameplay/GamePlayObject/IGamePlayObject.cpp
    ./game/Game/src/Gameplay/Hud/GameOverHUD.cpp
    ./game/Game/src/Gameplay/Hud/LevelHUD.cpp
    ./game/Game/src/Gameplay/Hud/LivesHUD.cpp
    ./game/Game/src/Gameplay/Hud/ScoreHUD.cpp
    ./game/Game/src/Gameplay/Laser/AlienLaser.cpp
    ./game/Game/src/Gameplay/Laser/AlienLaserNormal.cpp
    ./game/Game/src/Gameplay/Laser/AlienLaserPowered.cpp
    ./game/Game/src/Gameplay/Laser/CannonLaser.cpp
    ./game/Game/src/Gameplay/Laser/ILaser.cpp
    ./game/Game/src/Gameplay/Laser/LaserHolder.cpp
    ./game/Game/src/Gameplay/Level/Level.cpp
    ./game/Game/src/Gameplay/Player/Player.cpp
    ./game/Game/src/Gameplay/Scenery/Ground.cpp
    ./game/Game/src/Gameplay/Scenery/ISceneryObject.cpp
    ./game/Game/src/Gameplay/Scenery/Shield.cpp
    ./game/Game/src/Gameplay/UFO/UFO.cpp
    ./game/Game/src/Helpers/GameUtils.cpp
    ./game/Game/src/Helpers/SceneHelper.cpp
    ./game/Game/src/Helpers/Typewritter.cpp
    ./game/Game/src/Scenes/GameScene.cpp
    ./game/Game/src/Scenes/MenuScene.cpp
    ./game/Game/src/Scenes/SplashScene.cpp
    ./game/Game/src/Helpers/private/desktop/Storage.cpp
    ./game/Game/src/Helpers/private/emscripten/Storage.cpp
)


##----------------------------------------------------------------------------##
## Executable Definitions                                                     ##
##----------------------------------------------------------------------------##
add_executable(${GAME_NAME} ${SOURCE_FILES})

# if(${GAME_TARGET_PLATFORM} STREQUAL "web")
    set(ADDITIONAL_EMS_BUILD_FLAGS
        " -DEMSCRIPTEN"
        " -lidbfs.js"
        " --embed-file ./assets"
        " -s WASM=0"
        " -s USE_SDL=2"
        " -s USE_SDL_TTF=2"
        " -s USE_SDL_IMAGE=2"
        " -s SDL2_IMAGE_FORMATS='[\"png\"]'"
        " -s LEGACY_GL_EMULATION=0"
        " -s NO_EXIT_RUNTIME=1"
    )

    message("Adding addtional build flags to emscripten:")
    message(${ADDITIONAL_EMS_BUILD_FLAGS})

    message("Emscripten cmake: ${GAME_EMSCRIPTEN_TOOLCHAIN}")

    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/build.emscripten)
    set(CMAKE_TOOLCHAIN_FILE           ${GAME_EMSCRIPTEN_TOOLCHAIN})

    set_target_properties(
        ${GAME_NAME} PROPERTIES LINK_FLAGS
        "${ADDITIONAL_EMS_BUILD_FLAGS}"
    )
# endif()

##----------------------------------------------------------------------------##
## Link Libraries                                                             ##
##----------------------------------------------------------------------------##
target_link_libraries(${GAME_NAME} LINK_PUBLIC Cooper)
